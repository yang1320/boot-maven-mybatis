<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">


			<!-- 配置自动扫描包-->
		<context:component-scan base-package="com." >
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		</context:component-scan>
	
		<!-- 导入源文件 -->
		<context:property-placeholder location="classpath:db.properties"/>
		<!-- 配置c3p0数据源  （datasource用于提供connection） -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
				<property name="user" value="${user}"></property>
				<property name="password" value="${password}"></property>
				<property name="driverClass" value="${driverClass}"></property>
				<property name="jdbcUrl" value="${jdbcUrl}"></property>
				<property name="initialPoolSize" value="${initPoolSize}"></property>
				<property name="maxPoolSize" value="${maxPoolSize}"></property>
		</bean>
			<!-- 配置Hibernate的sessionfactory 实例 ：通过spring提供的LocalSessionFactoryBean 进行配置 （sessionfactory用于提供session）-->
				<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
				<!-- 配置数据源属性 -->
					<property name="dataSource" ref="dataSource"></property>
						<!-- 配置hibernate 配置文件的位置及名称 -->
					<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
					<!-- 配置hibernate 映射的文件位置及名称  可以使用通配符 -->
					<property name="mappingLocations" value="classpath:com/member/model/*.hbm.xml"></property>
		
				</bean>
				
				<!-- 工厂注入方法配置session -->
				<!-- 配置声明试事务 -->
				<!-- 1.配置事务管理器 -->
				<bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
					<property name="sessionFactory" ref="sessionFactory"></property>
				</bean>
				<!-- 2.配置事务属性，需要事务管理器 -->
				<tx:advice id="tx" transaction-manager="transactionManager">
					<tx:attributes>
						<tx:method name="get*" propagation="REQUIRED" read-only="true"/>
						<tx:method name="delete*" propagation="REQUIRED" />
						<tx:method name="add*" propagation="REQUIRED"/>
						<tx:method name="update*" propagation="REQUIRED"/>
						<tx:method name="*" propagation="REQUIRED"/>
					</tx:attributes>
				</tx:advice>
				<bean id="before" class="com.member.test.Before"></bean>
				<bean id="after" class="com.member.test.After"></bean>			
				<!-- 3.配置事务切点，并把切点和事务属性关联起来  -->
				
				<bean id="downloadDao" class="com.member.dao.DownloadDao"></bean>
				<aop:config expose-proxy="true">
					<aop:pointcut id="txpointcut" expression="execution(* com.member.service.*.*(..))" />
					<aop:advisor advice-ref="after" pointcut-ref="txpointcut"/>
					<aop:advisor advice-ref="before" pointcut-ref="txpointcut"/>
					<aop:advisor advice-ref="tx" pointcut-ref="txpointcut"/>
				</aop:config>
				
</beans>